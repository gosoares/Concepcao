// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II"
// VERSION "Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition"

// DATE "12/05/2019 22:53:07"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module addac (
	a,
	sel0,
	sel1,
	cin,
	clk,
	s,
	cout);
input 	a;
input 	sel0;
input 	sel1;
input 	cin;
input 	clk;
output 	s;
output 	cout;

// Design Ports Information
// s	=>  Location: PIN_39,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cout	=>  Location: PIN_30,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel0	=>  Location: PIN_28,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_38,	 I/O Standard: 2.5 V,	 Current Strength: Default
// sel1	=>  Location: PIN_11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_10,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_101,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("addac_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \clk~input_o ;
wire \s~output_o ;
wire \cout~output_o ;
wire \a~input_o ;
wire \sel1~input_o ;
wire \sel0~input_o ;
wire \cin~input_o ;
wire \acc0|y~q ;
wire \adder0|s~0_combout ;
wire \mux1|y~0_combout ;
wire \adder0|cout~0_combout ;


// Location: IOIBUF_X0_Y18_N15
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneive_io_obuf \s~output (
	.i(\mux1|y~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s~output_o ),
	.obar());
// synopsys translate_off
defparam \s~output .bus_hold = "false";
defparam \s~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N16
cycloneive_io_obuf \cout~output (
	.i(\adder0|cout~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y6_N22
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y18_N22
cycloneive_io_ibuf \sel1~input (
	.i(sel1),
	.ibar(gnd),
	.o(\sel1~input_o ));
// synopsys translate_off
defparam \sel1~input .bus_hold = "false";
defparam \sel1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y9_N8
cycloneive_io_ibuf \sel0~input (
	.i(sel0),
	.ibar(gnd),
	.o(\sel0~input_o ));
// synopsys translate_off
defparam \sel0~input .bus_hold = "false";
defparam \sel0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N22
cycloneive_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X1_Y18_N1
dffeas \acc0|y (
	.clk(\clk~input_o ),
	.d(gnd),
	.asdata(\mux1|y~0_combout ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\acc0|y~q ),
	.prn(vcc));
// synopsys translate_off
defparam \acc0|y .is_wysiwyg = "true";
defparam \acc0|y .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y18_N2
cycloneive_lcell_comb \adder0|s~0 (
// Equation(s):
// \adder0|s~0_combout  = \a~input_o  $ (\cin~input_o  $ (\sel0~input_o  $ (\acc0|y~q )))

	.dataa(\a~input_o ),
	.datab(\cin~input_o ),
	.datac(\sel0~input_o ),
	.datad(\acc0|y~q ),
	.cin(gnd),
	.combout(\adder0|s~0_combout ),
	.cout());
// synopsys translate_off
defparam \adder0|s~0 .lut_mask = 16'h6996;
defparam \adder0|s~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y18_N4
cycloneive_lcell_comb \mux1|y~0 (
// Equation(s):
// \mux1|y~0_combout  = (\sel1~input_o  & (((\adder0|s~0_combout )))) # (!\sel1~input_o  & (\a~input_o  $ ((\sel0~input_o ))))

	.dataa(\a~input_o ),
	.datab(\sel1~input_o ),
	.datac(\sel0~input_o ),
	.datad(\adder0|s~0_combout ),
	.cin(gnd),
	.combout(\mux1|y~0_combout ),
	.cout());
// synopsys translate_off
defparam \mux1|y~0 .lut_mask = 16'hDE12;
defparam \mux1|y~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y18_N0
cycloneive_lcell_comb \adder0|cout~0 (
// Equation(s):
// \adder0|cout~0_combout  = (\cin~input_o  & ((\acc0|y~q ) # (\sel0~input_o  $ (\a~input_o )))) # (!\cin~input_o  & (\acc0|y~q  & (\sel0~input_o  $ (\a~input_o ))))

	.dataa(\sel0~input_o ),
	.datab(\cin~input_o ),
	.datac(\acc0|y~q ),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\adder0|cout~0_combout ),
	.cout());
// synopsys translate_off
defparam \adder0|cout~0 .lut_mask = 16'hD4E8;
defparam \adder0|cout~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign s = \s~output_o ;

assign cout = \cout~output_o ;

endmodule
